Kernel command line: -q -f put page-merge-stk put child-qsort run page-merge-stk
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 218 sector (109 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-stk' into the file system...
Putting 'child-qsort' into the file system...
Executing 'page-merge-stk':
(page-merge-stk) begin
(page-merge-stk) init
(page-merge-stk) sort chunk 0
(page-merge-stk) sort chunk 1
(page-merge-stk) sort chunk 2
(page-merge-stk) sort chunk 3
(page-merge-stk) sort chunk 4
(page-merge-stk) sort chunk 5
(page-merge-stk) sort chunk 6
child-qsort: exit(-1)
Kernel PANIC at ../../lib/string.c:11 in memcpy(): assertion `dst != NULL || size == 0' failed.
Call stack: 0x80042186ea 0x800421762b 0x8004221279 0x800421c32a 0x8004207fd9.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 197 ticks
Thread: 30 idle ticks, 45 kernel ticks, 122 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 349 reads, 4142 writes
hd1:0: 218 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1552 characters output
Key